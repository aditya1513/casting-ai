/* ==========================================
   CastMatch Grid System v1.0
   Mathematical Precision Layout Framework
   ========================================== */

/* ==========================================
   ROOT VARIABLES - MATHEMATICAL FOUNDATION
   ========================================== */
:root {
  /* Base Unit (8-point grid) */
  --base-unit: 4px;
  
  /* Spacing Scale (Harmonic Progression) */
  --space-micro: calc(var(--base-unit) * 1);     /* 4px */
  --space-xs: calc(var(--base-unit) * 2);        /* 8px */
  --space-sm: calc(var(--base-unit) * 3);        /* 12px */
  --space-md: calc(var(--base-unit) * 4);        /* 16px */
  --space-lg: calc(var(--base-unit) * 6);        /* 24px */
  --space-xl: calc(var(--base-unit) * 8);        /* 32px */
  --space-2xl: calc(var(--base-unit) * 12);      /* 48px */
  --space-3xl: calc(var(--base-unit) * 16);      /* 64px */
  --space-4xl: calc(var(--base-unit) * 24);      /* 96px */
  --space-5xl: calc(var(--base-unit) * 32);      /* 128px */
  
  /* Golden Ratio Scale (1.618) */
  --golden-ratio: 1.618;
  --golden-sm: calc(var(--space-lg) * var(--golden-ratio));    /* 38.832px ≈ 40px */
  --golden-md: calc(var(--golden-sm) * var(--golden-ratio));    /* 62.8px ≈ 64px */
  --golden-lg: calc(var(--golden-md) * var(--golden-ratio));    /* 101.6px ≈ 104px */
  
  /* Modular Scale (1.25) */
  --scale-ratio: 1.25;
  --scale-1: calc(var(--space-md) * var(--scale-ratio));        /* 20px */
  --scale-2: calc(var(--scale-1) * var(--scale-ratio));         /* 25px */
  --scale-3: calc(var(--scale-2) * var(--scale-ratio));         /* 31.25px ≈ 32px */
  
  /* Grid Configuration */
  --grid-columns: 12;
  --grid-gutter: var(--space-lg);                               /* 24px */
  --grid-margin: var(--space-xl);                               /* 32px */
  
  /* Container Widths */
  --container-xs: 320px;
  --container-sm: 640px;
  --container-md: 768px;
  --container-lg: 1024px;
  --container-xl: 1280px;
  --container-2xl: 1440px;
  --container-3xl: 1920px;
  --container-4xl: 2560px;
  
  /* Responsive Breakpoints */
  --breakpoint-xs: 320px;
  --breakpoint-sm: 375px;
  --breakpoint-md: 425px;
  --breakpoint-lg: 768px;
  --breakpoint-xl: 1024px;
  --breakpoint-2xl: 1440px;
  --breakpoint-3xl: 1920px;
  --breakpoint-4xl: 2560px;
}

/* ==========================================
   GRID SYSTEM - CORE IMPLEMENTATION
   ========================================== */

/* Base Grid Container */
.grid-container {
  display: grid;
  grid-template-columns: repeat(var(--grid-columns), 1fr);
  gap: var(--grid-gutter);
  padding: 0 var(--grid-margin);
  margin: 0 auto;
  width: 100%;
  max-width: var(--container-2xl);
}

/* Fluid Grid Container */
.grid-fluid {
  max-width: 100%;
  padding: 0 var(--space-md);
}

/* Fixed Grid Container */
.grid-fixed {
  width: var(--container-2xl);
  margin: 0 auto;
}

/* ==========================================
   COLUMN SPAN UTILITIES
   ========================================== */

/* Desktop Column Spans (12-column) */
.col-1 { grid-column: span 1; }
.col-2 { grid-column: span 2; }
.col-3 { grid-column: span 3; }
.col-4 { grid-column: span 4; }
.col-5 { grid-column: span 5; }
.col-6 { grid-column: span 6; }
.col-7 { grid-column: span 7; }
.col-8 { grid-column: span 8; }
.col-9 { grid-column: span 9; }
.col-10 { grid-column: span 10; }
.col-11 { grid-column: span 11; }
.col-12 { grid-column: span 12; }

/* Column Start Positions */
.col-start-1 { grid-column-start: 1; }
.col-start-2 { grid-column-start: 2; }
.col-start-3 { grid-column-start: 3; }
.col-start-4 { grid-column-start: 4; }
.col-start-5 { grid-column-start: 5; }
.col-start-6 { grid-column-start: 6; }
.col-start-7 { grid-column-start: 7; }
.col-start-8 { grid-column-start: 8; }
.col-start-9 { grid-column-start: 9; }
.col-start-10 { grid-column-start: 10; }
.col-start-11 { grid-column-start: 11; }
.col-start-12 { grid-column-start: 12; }

/* ==========================================
   GAP UTILITIES (STANDARDIZED)
   ========================================== */

.gap-0 { gap: 0; }
.gap-xs { gap: var(--space-xs); }      /* 8px */
.gap-sm { gap: var(--space-sm); }      /* 12px */
.gap-md { gap: var(--space-md); }      /* 16px */
.gap-lg { gap: var(--space-lg); }      /* 24px */
.gap-xl { gap: var(--space-xl); }      /* 32px */
.gap-2xl { gap: var(--space-2xl); }    /* 48px */
.gap-3xl { gap: var(--space-3xl); }    /* 64px */

/* Directional Gaps */
.gap-x-lg { column-gap: var(--space-lg); }
.gap-y-lg { row-gap: var(--space-lg); }

/* ==========================================
   RESPONSIVE GRID SYSTEM
   ========================================== */

/* Mobile S (320px - 374px) */
@media (max-width: 374px) {
  .grid-container {
    grid-template-columns: repeat(4, 1fr);
    gap: var(--space-md);
    padding: 0 var(--space-md);
  }
  
  .col-xs-1 { grid-column: span 1; }
  .col-xs-2 { grid-column: span 2; }
  .col-xs-3 { grid-column: span 3; }
  .col-xs-4 { grid-column: span 4; }
}

/* Mobile M (375px - 424px) */
@media (min-width: 375px) and (max-width: 424px) {
  .grid-container {
    grid-template-columns: repeat(6, 1fr);
    gap: var(--space-md);
    padding: 0 var(--space-md);
  }
  
  .col-sm-1 { grid-column: span 1; }
  .col-sm-2 { grid-column: span 2; }
  .col-sm-3 { grid-column: span 3; }
  .col-sm-4 { grid-column: span 4; }
  .col-sm-5 { grid-column: span 5; }
  .col-sm-6 { grid-column: span 6; }
}

/* Mobile L (425px - 767px) */
@media (min-width: 425px) and (max-width: 767px) {
  .grid-container {
    grid-template-columns: repeat(6, 1fr);
    gap: calc(var(--space-md) + var(--space-micro));  /* 20px */
    padding: 0 calc(var(--space-md) + var(--space-micro));
  }
  
  .col-md-1 { grid-column: span 1; }
  .col-md-2 { grid-column: span 2; }
  .col-md-3 { grid-column: span 3; }
  .col-md-4 { grid-column: span 4; }
  .col-md-5 { grid-column: span 5; }
  .col-md-6 { grid-column: span 6; }
}

/* Tablet (768px - 1023px) */
@media (min-width: 768px) and (max-width: 1023px) {
  .grid-container {
    grid-template-columns: repeat(8, 1fr);
    gap: calc(var(--space-md) + var(--space-micro));  /* 20px */
    padding: 0 var(--space-lg);
  }
  
  .col-lg-1 { grid-column: span 1; }
  .col-lg-2 { grid-column: span 2; }
  .col-lg-3 { grid-column: span 3; }
  .col-lg-4 { grid-column: span 4; }
  .col-lg-5 { grid-column: span 5; }
  .col-lg-6 { grid-column: span 6; }
  .col-lg-7 { grid-column: span 7; }
  .col-lg-8 { grid-column: span 8; }
}

/* Desktop S (1024px - 1439px) */
@media (min-width: 1024px) and (max-width: 1439px) {
  .grid-container {
    grid-template-columns: repeat(12, 1fr);
    gap: var(--space-lg);
    padding: 0 var(--space-xl);
    max-width: var(--container-xl);
  }
}

/* Desktop M (1440px - 1919px) - DEFAULT */
@media (min-width: 1440px) and (max-width: 1919px) {
  .grid-container {
    grid-template-columns: repeat(12, 1fr);
    gap: var(--space-lg);
    padding: 0 var(--space-2xl);
    max-width: var(--container-2xl);
  }
}

/* Desktop L (1920px - 2559px) */
@media (min-width: 1920px) and (max-width: 2559px) {
  .grid-container {
    grid-template-columns: repeat(12, 1fr);
    gap: var(--space-xl);
    padding: 0 var(--space-3xl);
    max-width: var(--container-3xl);
  }
  
  .col-2xl-1 { grid-column: span 1; }
  .col-2xl-2 { grid-column: span 2; }
  .col-2xl-3 { grid-column: span 3; }
  .col-2xl-4 { grid-column: span 4; }
  .col-2xl-6 { grid-column: span 6; }
  .col-2xl-12 { grid-column: span 12; }
}

/* Desktop XL (2560px+) */
@media (min-width: 2560px) {
  .grid-container {
    grid-template-columns: repeat(16, 1fr);
    gap: var(--space-xl);
    padding: 0 var(--space-4xl);
    max-width: var(--container-4xl);
  }
  
  .col-3xl-1 { grid-column: span 1; }
  .col-3xl-2 { grid-column: span 2; }
  .col-3xl-3 { grid-column: span 3; }
  .col-3xl-4 { grid-column: span 4; }
  .col-3xl-8 { grid-column: span 8; }
  .col-3xl-16 { grid-column: span 16; }
}

/* ==========================================
   SUBGRID IMPLEMENTATION
   ========================================== */

.subgrid {
  display: grid;
  grid-template-columns: subgrid;
}

.subgrid-rows {
  display: grid;
  grid-template-rows: subgrid;
}

/* ==========================================
   ALIGNMENT UTILITIES
   ========================================== */

.items-start { align-items: start; }
.items-center { align-items: center; }
.items-end { align-items: end; }
.items-stretch { align-items: stretch; }

.justify-start { justify-content: start; }
.justify-center { justify-content: center; }
.justify-end { justify-content: end; }
.justify-between { justify-content: space-between; }
.justify-around { justify-content: space-around; }
.justify-evenly { justify-content: space-evenly; }

.place-center {
  place-items: center;
  place-content: center;
}

/* ==========================================
   ASPECT RATIO UTILITIES
   ========================================== */

.aspect-square { aspect-ratio: 1 / 1; }
.aspect-video { aspect-ratio: 16 / 9; }
.aspect-golden { aspect-ratio: 1.618 / 1; }
.aspect-card { aspect-ratio: 3 / 4; }
.aspect-poster { aspect-ratio: 2 / 3; }

/* ==========================================
   PERFORMANCE OPTIMIZATIONS
   ========================================== */

.grid-gpu {
  will-change: transform;
  transform: translateZ(0);
  backface-visibility: hidden;
}

.grid-contain {
  contain: layout style;
}

/* ==========================================
   UTILITY CLASSES
   ========================================== */

/* Hide/Show at breakpoints */
.hide-mobile { display: none; }
.hide-tablet { display: none; }
.hide-desktop { display: block; }

@media (min-width: 768px) {
  .hide-mobile { display: block; }
  .hide-tablet { display: none; }
  .hide-desktop { display: block; }
}

@media (min-width: 1024px) {
  .hide-mobile { display: block; }
  .hide-tablet { display: block; }
  .hide-desktop { display: none; }
}

/* ==========================================
   DEBUG MODE (Remove in production)
   ========================================== */

.grid-debug {
  position: relative;
}

.grid-debug::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: repeating-linear-gradient(
    90deg,
    rgba(255, 0, 0, 0.1) 0,
    rgba(255, 0, 0, 0.1) calc(100% / var(--grid-columns) - var(--grid-gutter)),
    transparent calc(100% / var(--grid-columns) - var(--grid-gutter)),
    transparent calc(100% / var(--grid-columns))
  );
  pointer-events: none;
  z-index: 9999;
}