export interface ProjectFactoryOptions {
    producerId?: string;
    status?: 'DRAFT' | 'ACTIVE' | 'CASTING' | 'IN_PRODUCTION' | 'COMPLETED' | 'CANCELLED';
    type?: 'FILM' | 'TV_SERIES' | 'WEB_SERIES' | 'COMMERCIAL' | 'THEATRE';
    customData?: Record<string, any>;
}
export declare class ProjectFactory {
    static create(options?: ProjectFactoryOptions): Promise<{
        type: import(".prisma/client").$Enums.ProjectType;
        id: string;
        status: import(".prisma/client").$Enums.ProjectStatus;
        title: string;
        description: string;
        isPublic: boolean;
        createdAt: Date;
        isActive: boolean;
        updatedAt: Date;
        languages: string[];
        productionHouse: string | null;
        priority: string | null;
        workingTitle: string | null;
        synopsis: string | null;
        logline: string | null;
        genre: string[];
        subGenre: string[];
        targetAudience: string | null;
        contentRating: string | null;
        coproducers: string[];
        platform: string | null;
        dubLanguages: string[];
        subtitleLanguages: string[];
        totalBudget: number | null;
        castingBudget: number | null;
        budgetCurrency: string;
        paymentTerms: string | null;
        preProductionStart: Date | null;
        castingStartDate: Date | null;
        castingEndDate: Date | null;
        auditionStartDate: Date | null;
        auditionEndDate: Date | null;
        callbackDeadline: Date | null;
        shootingStartDate: Date | null;
        shootingEndDate: Date | null;
        wrapDate: Date | null;
        releaseDate: Date | null;
        shootingLocations: string[];
        auditionLocations: string[];
        studioName: string | null;
        directorName: string | null;
        directorId: string | null;
        writerName: string | null;
        musicDirector: string | null;
        cinematographer: string | null;
        assistantCDId: string | null;
        lineProducerId: string | null;
        confidentiality: string | null;
        ndaRequired: boolean;
        ndaDocument: string | null;
        posterUrl: string | null;
        bannerUrl: string | null;
        scriptUrl: string | null;
        referenceLinks: string[];
        totalRoles: number;
        filledRoles: number;
        unionProject: boolean;
        openToNewcomers: boolean;
        searchKeywords: string[];
        aiSuggestedTalents: import("@prisma/client/runtime/library").JsonValue | null;
        isFeatured: boolean;
        viewCount: number;
        applicationCount: number;
        shareCount: number;
        saveCount: number;
        isArchived: boolean;
        publishedAt: Date | null;
        archivedAt: Date | null;
        castingDirectorId: string | null;
        producerId: string | null;
    }>;
    static createWithRoles(options?: ProjectFactoryOptions): Promise<{
        project: {
            type: import(".prisma/client").$Enums.ProjectType;
            id: string;
            status: import(".prisma/client").$Enums.ProjectStatus;
            title: string;
            description: string;
            isPublic: boolean;
            createdAt: Date;
            isActive: boolean;
            updatedAt: Date;
            languages: string[];
            productionHouse: string | null;
            priority: string | null;
            workingTitle: string | null;
            synopsis: string | null;
            logline: string | null;
            genre: string[];
            subGenre: string[];
            targetAudience: string | null;
            contentRating: string | null;
            coproducers: string[];
            platform: string | null;
            dubLanguages: string[];
            subtitleLanguages: string[];
            totalBudget: number | null;
            castingBudget: number | null;
            budgetCurrency: string;
            paymentTerms: string | null;
            preProductionStart: Date | null;
            castingStartDate: Date | null;
            castingEndDate: Date | null;
            auditionStartDate: Date | null;
            auditionEndDate: Date | null;
            callbackDeadline: Date | null;
            shootingStartDate: Date | null;
            shootingEndDate: Date | null;
            wrapDate: Date | null;
            releaseDate: Date | null;
            shootingLocations: string[];
            auditionLocations: string[];
            studioName: string | null;
            directorName: string | null;
            directorId: string | null;
            writerName: string | null;
            musicDirector: string | null;
            cinematographer: string | null;
            assistantCDId: string | null;
            lineProducerId: string | null;
            confidentiality: string | null;
            ndaRequired: boolean;
            ndaDocument: string | null;
            posterUrl: string | null;
            bannerUrl: string | null;
            scriptUrl: string | null;
            referenceLinks: string[];
            totalRoles: number;
            filledRoles: number;
            unionProject: boolean;
            openToNewcomers: boolean;
            searchKeywords: string[];
            aiSuggestedTalents: import("@prisma/client/runtime/library").JsonValue | null;
            isFeatured: boolean;
            viewCount: number;
            applicationCount: number;
            shareCount: number;
            saveCount: number;
            isArchived: boolean;
            publishedAt: Date | null;
            archivedAt: Date | null;
            castingDirectorId: string | null;
            producerId: string | null;
        };
        roles: {
            id: string;
            status: string;
            name: string;
            description: string;
            createdAt: Date;
            updatedAt: Date;
            gender: import(".prisma/client").$Enums.Gender | null;
            languages: string[];
            projectId: string;
            characterAge: string | null;
            requiredSkills: string[];
            compensation: number | null;
            compensationType: string | null;
            numberOfDays: number | null;
            isLead: boolean;
        }[];
    }>;
    static createWithAuditions(options?: ProjectFactoryOptions & {
        actorIds?: string[];
    }): Promise<{
        project: {
            type: import(".prisma/client").$Enums.ProjectType;
            id: string;
            status: import(".prisma/client").$Enums.ProjectStatus;
            title: string;
            description: string;
            isPublic: boolean;
            createdAt: Date;
            isActive: boolean;
            updatedAt: Date;
            languages: string[];
            productionHouse: string | null;
            priority: string | null;
            workingTitle: string | null;
            synopsis: string | null;
            logline: string | null;
            genre: string[];
            subGenre: string[];
            targetAudience: string | null;
            contentRating: string | null;
            coproducers: string[];
            platform: string | null;
            dubLanguages: string[];
            subtitleLanguages: string[];
            totalBudget: number | null;
            castingBudget: number | null;
            budgetCurrency: string;
            paymentTerms: string | null;
            preProductionStart: Date | null;
            castingStartDate: Date | null;
            castingEndDate: Date | null;
            auditionStartDate: Date | null;
            auditionEndDate: Date | null;
            callbackDeadline: Date | null;
            shootingStartDate: Date | null;
            shootingEndDate: Date | null;
            wrapDate: Date | null;
            releaseDate: Date | null;
            shootingLocations: string[];
            auditionLocations: string[];
            studioName: string | null;
            directorName: string | null;
            directorId: string | null;
            writerName: string | null;
            musicDirector: string | null;
            cinematographer: string | null;
            assistantCDId: string | null;
            lineProducerId: string | null;
            confidentiality: string | null;
            ndaRequired: boolean;
            ndaDocument: string | null;
            posterUrl: string | null;
            bannerUrl: string | null;
            scriptUrl: string | null;
            referenceLinks: string[];
            totalRoles: number;
            filledRoles: number;
            unionProject: boolean;
            openToNewcomers: boolean;
            searchKeywords: string[];
            aiSuggestedTalents: import("@prisma/client/runtime/library").JsonValue | null;
            isFeatured: boolean;
            viewCount: number;
            applicationCount: number;
            shareCount: number;
            saveCount: number;
            isArchived: boolean;
            publishedAt: Date | null;
            archivedAt: Date | null;
            castingDirectorId: string | null;
            producerId: string | null;
        };
        roles: {
            id: string;
            status: string;
            name: string;
            description: string;
            createdAt: Date;
            updatedAt: Date;
            gender: import(".prisma/client").$Enums.Gender | null;
            languages: string[];
            projectId: string;
            characterAge: string | null;
            requiredSkills: string[];
            compensation: number | null;
            compensationType: string | null;
            numberOfDays: number | null;
            isLead: boolean;
        }[];
        auditions: {
            location: string | null;
            id: string;
            status: import(".prisma/client").$Enums.AuditionStatus;
            actorId: string | null;
            thumbnailUrl: string | null;
            duration: number;
            createdAt: Date;
            updatedAt: Date;
            round: number;
            improvements: string[];
            recommendation: string | null;
            projectId: string;
            endTime: Date | null;
            startedAt: Date | null;
            assistantCDId: string | null;
            castingDirectorId: string;
            scheduledAt: Date;
            timeSlot: string | null;
            auditionType: import(".prisma/client").$Enums.AuditionType;
            venueAddress: string | null;
            roomNumber: string | null;
            meetingLink: string | null;
            meetingPassword: string | null;
            dialInNumber: string | null;
            directorPresent: boolean;
            producerPresent: boolean;
            observers: string[];
            panelMembers: import("@prisma/client/runtime/library").JsonValue | null;
            scriptProvided: string | null;
            sceneNumbers: string[];
            preparationNotes: string | null;
            specialInstructions: string | null;
            dresscode: string | null;
            propsRequired: string[];
            cameraSetup: string | null;
            lightingNotes: string | null;
            audioRequirements: string | null;
            backgroundRequired: string | null;
            checkedIn: boolean;
            checkedInAt: Date | null;
            completedAt: Date | null;
            noShowReason: string | null;
            cancellationReason: string | null;
            rescheduledFrom: string | null;
            rescheduledCount: number;
            performances: import("@prisma/client/runtime/library").JsonValue | null;
            technicalSkills: import("@prisma/client/runtime/library").JsonValue | null;
            overallRating: number | null;
            lookRating: number | null;
            actingRating: number | null;
            voiceRating: number | null;
            energyRating: number | null;
            chemistryRating: number | null;
            strengths: string[];
            castingNotes: string | null;
            directorNotes: string | null;
            producerNotes: string | null;
            internalComments: string | null;
            talentFeedback: string | null;
            recordingUrl: string | null;
            recordingDuration: number | null;
            additionalMedia: string[];
            selftapeUrl: string | null;
            callbackRecommended: boolean;
            finalDecision: string | null;
            decisionDate: Date | null;
            decisionBy: string | null;
            followUpRequired: boolean;
            followUpNotes: string | null;
            followUpDate: Date | null;
            contractSent: boolean;
            contractSentDate: Date | null;
            applicationId: string;
            characterId: string | null;
            talentId: string | null;
        }[];
    }>;
    static createMany(count: number, options?: ProjectFactoryOptions): Promise<{
        type: import(".prisma/client").$Enums.ProjectType;
        id: string;
        status: import(".prisma/client").$Enums.ProjectStatus;
        title: string;
        description: string;
        isPublic: boolean;
        createdAt: Date;
        isActive: boolean;
        updatedAt: Date;
        languages: string[];
        productionHouse: string | null;
        priority: string | null;
        workingTitle: string | null;
        synopsis: string | null;
        logline: string | null;
        genre: string[];
        subGenre: string[];
        targetAudience: string | null;
        contentRating: string | null;
        coproducers: string[];
        platform: string | null;
        dubLanguages: string[];
        subtitleLanguages: string[];
        totalBudget: number | null;
        castingBudget: number | null;
        budgetCurrency: string;
        paymentTerms: string | null;
        preProductionStart: Date | null;
        castingStartDate: Date | null;
        castingEndDate: Date | null;
        auditionStartDate: Date | null;
        auditionEndDate: Date | null;
        callbackDeadline: Date | null;
        shootingStartDate: Date | null;
        shootingEndDate: Date | null;
        wrapDate: Date | null;
        releaseDate: Date | null;
        shootingLocations: string[];
        auditionLocations: string[];
        studioName: string | null;
        directorName: string | null;
        directorId: string | null;
        writerName: string | null;
        musicDirector: string | null;
        cinematographer: string | null;
        assistantCDId: string | null;
        lineProducerId: string | null;
        confidentiality: string | null;
        ndaRequired: boolean;
        ndaDocument: string | null;
        posterUrl: string | null;
        bannerUrl: string | null;
        scriptUrl: string | null;
        referenceLinks: string[];
        totalRoles: number;
        filledRoles: number;
        unionProject: boolean;
        openToNewcomers: boolean;
        searchKeywords: string[];
        aiSuggestedTalents: import("@prisma/client/runtime/library").JsonValue | null;
        isFeatured: boolean;
        viewCount: number;
        applicationCount: number;
        shareCount: number;
        saveCount: number;
        isArchived: boolean;
        publishedAt: Date | null;
        archivedAt: Date | null;
        castingDirectorId: string | null;
        producerId: string | null;
    }[]>;
    static generateMockProjectData(options?: ProjectFactoryOptions): {
        title: any;
        description: any;
        type: any;
        genre: any;
        budget: any;
        startDate: any;
        endDate: any;
        status: "ACTIVE" | "COMPLETED" | "DRAFT" | "CASTING" | "IN_PRODUCTION" | "CANCELLED";
        productionCompany: any;
        shootingLocations: any[];
        languages: string[];
    };
    static cleanup(projectId?: string): Promise<void>;
}
//# sourceMappingURL=projectFactory.d.ts.map