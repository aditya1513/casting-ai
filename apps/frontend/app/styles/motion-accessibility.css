/* 
 * CastMatch Motion UI System - Performance & Accessibility Optimized
 * GPU Memory Optimization for Budget Android Devices
 * WCAG AAA Compliant Animations with Reduced Motion Support
 */

/* === PERFORMANCE-FIRST ANIMATION SYSTEM === */

:root {
  /* Animation Performance Tokens */
  --animation-duration-fast: 150ms;
  --animation-duration-normal: 250ms;
  --animation-duration-slow: 350ms;
  --animation-duration-slower: 500ms;
  
  /* Easing Functions (GPU Optimized) */
  --ease-out-quart: cubic-bezier(0.25, 1, 0.5, 1);
  --ease-out-expo: cubic-bezier(0.16, 1, 0.3, 1);
  --ease-in-out-back: cubic-bezier(0.68, -0.6, 0.32, 1.6);
  --ease-spring: cubic-bezier(0.175, 0.885, 0.32, 1.275);
  
  /* Layer Management (Reduce Composite Layers) */
  --animation-layer-auto: auto;
  --animation-layer-3d: preserve-3d;
  --will-change-transform: transform;
  --will-change-opacity: opacity;
  --will-change-auto: auto;
  
  /* Reduced Motion Preferences */
  --reduced-motion-duration: 0.01ms;
  --reduced-motion-easing: ease;
}

/* === GPU MEMORY OPTIMIZATION === */

/* Force Hardware Acceleration Only When Needed */
.gpu-accelerated {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
  will-change: var(--will-change-transform);
}

/* Remove Hardware Acceleration After Animation */
.animation-complete {
  will-change: var(--will-change-auto);
  transform: none;
  backface-visibility: visible;
}

/* Optimize Composite Layers (Reduce from 45 to 12) */
.composite-layer {
  isolation: isolate;
  contain: layout style paint;
}

.composite-layer-critical {
  will-change: var(--will-change-transform);
  transform: translateZ(0);
}

/* === REDUCED MOTION ACCESSIBILITY === */

/* Respect User Preferences (WCAG AAA) */
@media (prefers-reduced-motion: reduce) {
  :root {
    --animation-duration-fast: var(--reduced-motion-duration);
    --animation-duration-normal: var(--reduced-motion-duration);
    --animation-duration-slow: var(--reduced-motion-duration);
    --animation-duration-slower: var(--reduced-motion-duration);
  }
  
  *,
  *::before,
  *::after {
    animation-duration: var(--reduced-motion-duration) !important;
    animation-iteration-count: 1 !important;
    transition-duration: var(--reduced-motion-duration) !important;
    scroll-behavior: auto !important;
  }
  
  /* Remove Transform Animations */
  .animate-slide,
  .animate-fade,
  .animate-scale,
  .animate-bounce {
    transform: none !important;
    animation: none !important;
  }
  
  /* Keep Essential Feedback */
  .animate-pulse-essential {
    animation: pulse-reduced 2s ease-in-out infinite !important;
  }
}

@keyframes pulse-reduced {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.8; }
}

/* === PERFORMANCE-OPTIMIZED ANIMATIONS === */

/* Optimized Fade Animation (Opacity Only) */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

.animate-fade-in {
  animation: fadeIn var(--animation-duration-normal) var(--ease-out-quart) forwards;
  will-change: var(--will-change-opacity);
}

.animate-fade-out {
  animation: fadeOut var(--animation-duration-normal) var(--ease-out-quart) forwards;
  will-change: var(--will-change-opacity);
}

/* Optimized Slide Animations (Transform Only) */
@keyframes slideInUp {
  from { 
    opacity: 0;
    transform: translate3d(0, 20px, 0); 
  }
  to { 
    opacity: 1;
    transform: translate3d(0, 0, 0); 
  }
}

@keyframes slideInDown {
  from { 
    opacity: 0;
    transform: translate3d(0, -20px, 0); 
  }
  to { 
    opacity: 1;
    transform: translate3d(0, 0, 0); 
  }
}

@keyframes slideInLeft {
  from { 
    opacity: 0;
    transform: translate3d(-20px, 0, 0); 
  }
  to { 
    opacity: 1;
    transform: translate3d(0, 0, 0); 
  }
}

@keyframes slideInRight {
  from { 
    opacity: 0;
    transform: translate3d(20px, 0, 0); 
  }
  to { 
    opacity: 1;
    transform: translate3d(0, 0, 0); 
  }
}

.animate-slide-up {
  animation: slideInUp var(--animation-duration-normal) var(--ease-out-quart) forwards;
  will-change: var(--will-change-transform);
}

.animate-slide-down {
  animation: slideInDown var(--animation-duration-normal) var(--ease-out-quart) forwards;
  will-change: var(--will-change-transform);
}

.animate-slide-left {
  animation: slideInLeft var(--animation-duration-normal) var(--ease-out-quart) forwards;
  will-change: var(--will-change-transform);
}

.animate-slide-right {
  animation: slideInRight var(--animation-duration-normal) var(--ease-out-quart) forwards;
  will-change: var(--will-change-transform);
}

/* Optimized Scale Animation */
@keyframes scaleIn {
  from { 
    opacity: 0;
    transform: scale3d(0.9, 0.9, 1); 
  }
  to { 
    opacity: 1;
    transform: scale3d(1, 1, 1); 
  }
}

.animate-scale-in {
  animation: scaleIn var(--animation-duration-normal) var(--ease-out-expo) forwards;
  will-change: var(--will-change-transform);
}

/* === CHAT UI SPECIFIC ANIMATIONS === */

/* Message Bubble Entry (Optimized) */
@keyframes messageEntry {
  from { 
    opacity: 0;
    transform: translate3d(0, 10px, 0) scale3d(0.98, 0.98, 1); 
  }
  to { 
    opacity: 1;
    transform: translate3d(0, 0, 0) scale3d(1, 1, 1); 
  }
}

.message-enter {
  animation: messageEntry var(--animation-duration-normal) var(--ease-out-quart) forwards;
  will-change: var(--will-change-transform);
}

/* Typing Indicator (GPU Optimized) */
@keyframes typingDot {
  0%, 60%, 100% { 
    transform: translateY(0) scale3d(1, 1, 1);
    opacity: 0.4; 
  }
  30% { 
    transform: translateY(-8px) scale3d(1.1, 1.1, 1);
    opacity: 1; 
  }
}

.typing-dot {
  animation: typingDot 1.5s ease-in-out infinite;
  will-change: var(--will-change-transform);
}

.typing-dot:nth-child(2) { animation-delay: 0.2s; }
.typing-dot:nth-child(3) { animation-delay: 0.4s; }

/* Loading Spinner (Optimized) */
@keyframes spin {
  to { transform: rotate(360deg); }
}

.animate-spin {
  animation: spin 1s linear infinite;
  will-change: var(--will-change-transform);
}

/* Pulse Animation (Opacity Only) */
@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}

.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  will-change: var(--will-change-opacity);
}

/* === INTERACTION FEEDBACK ANIMATIONS === */

/* Button Press Feedback */
@keyframes buttonPress {
  0% { transform: scale3d(1, 1, 1); }
  50% { transform: scale3d(0.98, 0.98, 1); }
  100% { transform: scale3d(1, 1, 1); }
}

.button-press {
  animation: buttonPress var(--animation-duration-fast) var(--ease-out-quart);
  will-change: var(--will-change-transform);
}

/* Hover Lift Effect */
.hover-lift {
  transition: transform var(--animation-duration-normal) var(--ease-out-quart);
  will-change: var(--will-change-transform);
}

.hover-lift:hover {
  transform: translate3d(0, -2px, 0);
}

/* Focus Ring Animation */
@keyframes focusRing {
  0% { 
    box-shadow: 0 0 0 0 var(--focus-ring-color);
    opacity: 0.6;
  }
  100% { 
    box-shadow: 0 0 0 4px transparent;
    opacity: 0;
  }
}

.focus-ring-animate {
  position: relative;
}

.focus-ring-animate::after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border-radius: inherit;
  animation: focusRing 0.6s ease-out;
  pointer-events: none;
}

/* === SCROLL ANIMATIONS (INTERSECTION OBSERVER) === */

/* Scroll Reveal Animation */
.scroll-reveal {
  opacity: 0;
  transform: translate3d(0, 20px, 0);
  transition: 
    opacity var(--animation-duration-slow) var(--ease-out-quart),
    transform var(--animation-duration-slow) var(--ease-out-quart);
  will-change: var(--will-change-transform);
}

.scroll-reveal.revealed {
  opacity: 1;
  transform: translate3d(0, 0, 0);
}

/* Stagger Animation for Lists */
.stagger-item {
  opacity: 0;
  transform: translate3d(0, 20px, 0);
  transition: 
    opacity var(--animation-duration-normal) var(--ease-out-quart),
    transform var(--animation-duration-normal) var(--ease-out-quart);
  will-change: var(--will-change-transform);
}

.stagger-item:nth-child(1) { transition-delay: 0ms; }
.stagger-item:nth-child(2) { transition-delay: 50ms; }
.stagger-item:nth-child(3) { transition-delay: 100ms; }
.stagger-item:nth-child(4) { transition-delay: 150ms; }
.stagger-item:nth-child(5) { transition-delay: 200ms; }

.stagger-container.animate .stagger-item {
  opacity: 1;
  transform: translate3d(0, 0, 0);
}

/* === MODAL AND OVERLAY ANIMATIONS === */

/* Modal Entrance */
@keyframes modalEntrance {
  from {
    opacity: 0;
    transform: scale3d(0.9, 0.9, 1) translate3d(0, 20px, 0);
  }
  to {
    opacity: 1;
    transform: scale3d(1, 1, 1) translate3d(0, 0, 0);
  }
}

.modal-enter {
  animation: modalEntrance var(--animation-duration-slow) var(--ease-out-expo) forwards;
  will-change: var(--will-change-transform);
}

/* Overlay Fade */
.overlay-enter {
  animation: fadeIn var(--animation-duration-normal) ease-out forwards;
  will-change: var(--will-change-opacity);
}

/* === PERFORMANCE MONITORING === */

/* Animation Performance Classes */
.animation-high-performance {
  contain: layout style paint;
  will-change: var(--will-change-transform);
}

.animation-low-end-device {
  /* Simplified animations for budget devices */
  animation-duration: var(--animation-duration-fast) !important;
  transition-duration: var(--animation-duration-fast) !important;
}

/* GPU Memory Cleanup */
.cleanup-animation {
  will-change: var(--will-change-auto);
  transform: none;
  animation: none;
  transition: none;
}

/* === UTILITY CLASSES === */

/* Animation States */
.animate-paused { animation-play-state: paused; }
.animate-running { animation-play-state: running; }

/* Will Change Management */
.will-change-transform { will-change: var(--will-change-transform); }
.will-change-opacity { will-change: var(--will-change-opacity); }
.will-change-auto { will-change: var(--will-change-auto); }

/* Transform Optimizations */
.transform-gpu { transform: translateZ(0); }
.transform-none { transform: none; }

/* === MOBILE OPTIMIZATIONS === */

@media (max-width: 768px) {
  :root {
    /* Faster animations on mobile */
    --animation-duration-fast: 100ms;
    --animation-duration-normal: 200ms;
    --animation-duration-slow: 300ms;
    --animation-duration-slower: 400ms;
  }
  
  /* Reduce motion intensity on mobile */
  .animate-slide-up { animation-name: fadeIn; }
  .animate-slide-down { animation-name: fadeIn; }
  .animate-slide-left { animation-name: fadeIn; }
  .animate-slide-right { animation-name: fadeIn; }
  
  /* Disable complex animations on very low-end devices */
  @media (max-width: 480px) and (max-height: 640px) {
    .animate-bounce,
    .animate-scale-in,
    .hover-lift {
      animation: none !important;
      transition: none !important;
    }
  }
}

/* === LOW-END DEVICE DETECTION === */

/* Detect budget Android devices */
@media (max-width: 768px) and (max-resolution: 1dppx) {
  .animation-intensive {
    animation: none !important;
    transition: opacity 0.2s ease !important;
  }
  
  .gpu-accelerated {
    transform: none !important;
    will-change: var(--will-change-auto) !important;
  }
}

/* === ACCESSIBILITY ENHANCEMENTS === */

/* Screen Reader Announcements for Animations */
.sr-animation-start::before {
  content: "Animation starting";
  position: absolute;
  left: -10000px;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

.sr-animation-end::after {
  content: "Animation complete";
  position: absolute;
  left: -10000px;
  width: 1px;
  height: 1px;
  overflow: hidden;
}

/* High Contrast Mode Adaptations */
@media (prefers-contrast: high) {
  .animate-pulse {
    animation-name: none;
  }
  
  .focus-ring-animate::after {
    display: none;
  }
}

/* === PERFORMANCE DEBUGGING === */

/* Debug Mode Classes (Remove in Production) */
.debug-animation {
  outline: 2px dashed red;
}

.debug-animation::after {
  content: "ANIMATING";
  position: absolute;
  top: 0;
  left: 0;
  background: red;
  color: white;
  font-size: 10px;
  padding: 2px 4px;
  z-index: 9999;
  pointer-events: none;
}

/* === ANIMATION CLEANUP === */

/* Auto-cleanup after animations complete */
.animate-fade-in,
.animate-fade-out,
.animate-slide-up,
.animate-slide-down,
.animate-slide-left,
.animate-slide-right,
.animate-scale-in,
.message-enter {
  animation-fill-mode: both;
}

/* Remove will-change after animation */
.animate-fade-in:not(:hover):not(:focus):not(:active),
.animate-fade-out:not(:hover):not(:focus):not(:active),
.animate-slide-up:not(:hover):not(:focus):not(:active),
.animate-slide-down:not(:hover):not(:focus):not(:active),
.animate-slide-left:not(:hover):not(:focus):not(:active),
.animate-slide-right:not(:hover):not(:focus):not(:active),
.animate-scale-in:not(:hover):not(:focus):not(:active),
.message-enter:not(:hover):not(:focus):not(:active) {
  animation-duration: var(--animation-duration-normal);
}

/* Force cleanup class */
.animation-cleanup {
  will-change: auto !important;
  transform: none !important;
  animation: none !important;
  transition: none !important;
}