apiVersion: apps/v1
kind: Deployment
metadata:
  name: castmatch-ml-service
  namespace: production
  labels:
    app: castmatch-ml
    version: v3.0.0
    component: ml-service
spec:
  replicas: 4  # Initial replicas, HPA will manage this
  selector:
    matchLabels:
      app: castmatch-ml
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: castmatch-ml
        version: v3.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8003"
        prometheus.io/path: "/metrics"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - castmatch-ml
              topologyKey: kubernetes.io/hostname
      containers:
      - name: ml-service
        image: castmatch/ml-service:3.0.0
        ports:
        - containerPort: 8003
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: REDIS_HOST
          value: redis-service.production.svc.cluster.local
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DB
          value: "0"
        - name: MAX_CONCURRENT_REQUESTS
          value: "100"
        - name: MIN_WORKERS
          value: "4"
        - name: MAX_WORKERS
          value: "32"
        - name: MODEL_CACHE_TTL
          value: "3600"
        - name: EMBEDDING_CACHE_TTL
          value: "86400"
        - name: AB_TEST_ENABLED
          value: "true"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ml-secrets
              key: openai-api-key
        - name: ANTHROPIC_API_KEY
          valueFrom:
            secretKeyRef:
              name: ml-secrets
              key: anthropic-api-key
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "4"
            memory: "8Gi"
            nvidia.com/gpu: "1"  # Optional GPU support
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
        - name: vector-index
          mountPath: /app/vector-index
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: model-cache-pvc
      - name: vector-index
        persistentVolumeClaim:
          claimName: vector-index-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: castmatch-ml-service
  namespace: production
  labels:
    app: castmatch-ml
spec:
  type: ClusterIP
  selector:
    app: castmatch-ml
  ports:
  - port: 80
    targetPort: 8003
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: castmatch-ml-hpa
  namespace: production
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: castmatch-ml-service
  minReplicas: 4
  maxReplicas: 50  # Support for 20K users
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: ml_request_duration_seconds_p95
      target:
        type: AverageValue
        averageValue: "0.2"  # 200ms p95 target
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 10
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-cache-pvc
  namespace: production
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 100Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vector-index-pvc
  namespace: production
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 500Gi