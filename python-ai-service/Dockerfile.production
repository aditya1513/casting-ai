# Multi-stage build for production ML service
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    cmake \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /build

# Copy requirements
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --user \
    fastapi==0.104.1 \
    uvicorn[standard]==0.24.0 \
    pydantic==2.5.0 \
    redis[hiredis]==5.0.1 \
    aioredis==2.0.1 \
    numpy==1.24.3 \
    scikit-learn==1.3.2 \
    sentence-transformers==2.2.2 \
    torch==2.1.0 --index-url https://download.pytorch.org/whl/cpu \
    transformers==4.35.0 \
    httpx==0.25.1 \
    prometheus-client==0.19.0 \
    loguru==0.7.2 \
    python-multipart==0.0.6 \
    orjson==3.9.10 \
    psutil==5.9.6 \
    aiofiles==23.2.1 \
    uvloop==0.19.0

# Production image
FROM python:3.11-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 -s /bin/bash mlservice

# Set working directory
WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /root/.local /home/mlservice/.local

# Copy application code
COPY production_ml_service.py .
COPY --chown=mlservice:mlservice . .

# Set environment variables
ENV PATH=/home/mlservice/.local/bin:$PATH \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUTF8=1 \
    TZ=UTC

# Switch to non-root user
USER mlservice

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:8003/health || exit 1

# Expose ports
EXPOSE 8003 9090

# Run the application
CMD ["python", "-m", "uvicorn", "production_ml_service:app", \
     "--host", "0.0.0.0", \
     "--port", "8003", \
     "--workers", "4", \
     "--loop", "uvloop", \
     "--log-level", "info"]