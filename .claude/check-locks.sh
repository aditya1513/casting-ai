#!/bin/bash

# Check if files are locked before editing
# Usage: ./check-locks.sh <file_path>

LOCKS_FILE=".claude/WINDOW_LOCKS.json"
FILE_TO_CHECK="$1"

if [ -z "$FILE_TO_CHECK" ]; then
    echo "Usage: $0 <file_path>"
    echo "Example: $0 src/services/vector.service.ts"
    exit 1
fi

if [ ! -f "$LOCKS_FILE" ]; then
    echo "‚ùå Locks file not found: $LOCKS_FILE"
    exit 1
fi

# Check if file is locked using jq
if command -v jq &> /dev/null; then
    LOCK_INFO=$(jq -r ".locks.\"$FILE_TO_CHECK\"" "$LOCKS_FILE")
    
    if [ "$LOCK_INFO" != "null" ]; then
        WINDOW=$(echo "$LOCK_INFO" | jq -r '.window')
        TASK=$(echo "$LOCK_INFO" | jq -r '.task')
        LOCKED_AT=$(echo "$LOCK_INFO" | jq -r '.locked_at')
        
        echo "üîí File is LOCKED"
        echo "   Window: $WINDOW"
        echo "   Task: $TASK"
        echo "   Locked at: $LOCKED_AT"
        echo ""
        echo "‚ö†Ô∏è  DO NOT EDIT this file until lock is released!"
        exit 1
    else
        echo "‚úÖ File is AVAILABLE for editing"
        echo "   Remember to add lock if you're going to edit it"
        exit 0
    fi
else
    # Fallback if jq is not installed
    if grep -q "\"$FILE_TO_CHECK\"" "$LOCKS_FILE"; then
        echo "üîí File appears to be LOCKED (install jq for details)"
        echo "‚ö†Ô∏è  Check $LOCKS_FILE manually before editing"
        exit 1
    else
        echo "‚úÖ File appears to be AVAILABLE"
        exit 0
    fi
fi